{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\macav\\\\Desktop\\\\Nexux-tat\\\\Nexus-tat\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.js\";\nimport { Navigate } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  allowedRoles\n}) => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 22\n  }, this);\n  try {\n    const decoded = jwtDecode(token);\n    const userRole = decoded.role;\n    if (!allowedRoles.includes(userRole)) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/unauthorized\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 14\n      }, this);\n    }\n    return children;\n  } catch (err) {\n    console.error(\"Invalid token:\", err);\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["Navigate","jwtDecode","jsxDEV","_jsxDEV","ProtectedRoute","children","allowedRoles","token","localStorage","getItem","to","fileName","_jsxFileName","lineNumber","columnNumber","decoded","userRole","role","includes","err","console","error","_c","$RefreshReg$"],"sources":["C:/Users/macav/Desktop/Nexux-tat/Nexus-tat/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["import { Navigate } from \"react-router-dom\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\nconst ProtectedRoute = ({ children, allowedRoles }) => {\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  if (!token) return <Navigate to=\"/login\" />;\r\n\r\n  try {\r\n    const decoded = jwtDecode(token);\r\n    const userRole = decoded.role;\r\n\r\n    if (!allowedRoles.includes(userRole)) {\r\n      return <Navigate to=\"/unauthorized\" />;\r\n    }\r\n\r\n    return children;\r\n  } catch (err) {\r\n    console.error(\"Invalid token:\", err);\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EACrD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,IAAI,CAACF,KAAK,EAAE,oBAAOJ,OAAA,CAACH,QAAQ;IAACU,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAE3C,IAAI;IACF,MAAMC,OAAO,GAAGd,SAAS,CAACM,KAAK,CAAC;IAChC,MAAMS,QAAQ,GAAGD,OAAO,CAACE,IAAI;IAE7B,IAAI,CAACX,YAAY,CAACY,QAAQ,CAACF,QAAQ,CAAC,EAAE;MACpC,oBAAOb,OAAA,CAACH,QAAQ;QAACU,EAAE,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACxC;IAEA,OAAOT,QAAQ;EACjB,CAAC,CAAC,OAAOc,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEF,GAAG,CAAC;IACpC,oBAAOhB,OAAA,CAACH,QAAQ;MAACU,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;AACF,CAAC;AAACQ,EAAA,GAlBIlB,cAAc;AAoBpB,eAAeA,cAAc;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}